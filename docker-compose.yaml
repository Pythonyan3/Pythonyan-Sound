version: "3"

volumes:
  redis_volume:
  db_volume:
  celery_volume:

services:
  pythonyansound:
    build: .
    container_name: "pythonyan-sound"
    restart: always
    entrypoint: ../docker-entrypoint.sh
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      APP_SECRET_KEY: ${APP_SECRET_KEY}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      DB_HOST: postgres
      REDIS_HOST: redis
    volumes:
      - .:/usr/src/pythonyansound
    ports:
    - 8000:8000
    links:
      - redis
      - postgres

  celery:
    build: .
    restart: always
    container_name: "pythonyan-sound-celery"
    command: celery -A pythonyanssound worker -B
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      APP_SECRET_KEY: ${APP_SECRET_KEY}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      DB_HOST: postgres
      REDIS_HOST: redis
    volumes:
      - "celery_volume:/code"
    depends_on:
      - pythonyansound
    links:
      - redis
      - postgres


  redis:
    image: redis:latest
    container_name: "redis"
    volumes:
    - "redis_volume:/data"
    restart: always

  postgres:
    image: postgres:12.3
    container_name: "postgresql"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
    - "db_volume:/var/lib/postgresql/data"
    restart: always

