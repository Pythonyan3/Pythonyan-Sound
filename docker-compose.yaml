version: "3"

volumes:
  redis_volume:
  db_volume:
  celery_volume:

services:
  pythonyansound:
    build: .
    container_name: "pythonyan-sound"
    restart: always
    entrypoint: ../docker-entrypoint.sh
    environment:
      DB_HOST: postgres
      REDIS_HOST: redis
    env_file:
      - ./.env
    volumes:
      - .:/usr/src/pythonyansound
    ports:
    - "8000:8000"
    depends_on:
      - postgres
      - redis

  celery:
    build: .
    restart: always
    container_name: "pythonyan-sound-celery"
    command: celery -A pythonyanssound worker -B
    environment:
      DB_HOST: postgres
      REDIS_HOST: redis
    env_file:
      - ./.env
    volumes:
      - "celery_volume:/code"
    depends_on:
      - postgres
      - redis


  redis:
    image: redis:latest
    container_name: "pythonyan-sound-redis"
    restart: always
    ports:
      - "6379:6379"
    volumes:
    - "redis_volume:/data"

  postgres:
    image: postgres:12.3
    container_name: "postgresql"
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - ./.env
    volumes:
    - "db_volume:/var/lib/postgresql/data"

